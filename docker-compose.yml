services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - "9092:9092"

  postgres-account:
    image: postgres:15
    environment:
      POSTGRES_DB: accountdb
      POSTGRES_USER: accountuser
      POSTGRES_PASSWORD: accountpass
    ports:
      - "5433:5432"
    volumes:
      - pgdata-account:/var/lib/postgresql/data

  postgres-transaction:
    image: postgres:15
    environment:
      POSTGRES_DB: transactiondb
      POSTGRES_USER: transactionuser
      POSTGRES_PASSWORD: transactionpass
    ports:
      - "5434:5432"
    volumes:
      - pgdata-transaction:/var/lib/postgresql/data

  postgres-auth:
    image: postgres:15
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
    ports:
      - "5435:5432"
    volumes:
      - pgdata-auth:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  auth_service:
    build: ./auth_service
    depends_on:
      - postgres-auth
      - redis
    environment:
      POSTGRES_HOST: postgres-auth
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
      REDIS_URL: redis://redis:6379/0
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: adminpass
      DJANGO_SUPERUSER_EMAIL: admin@example.com
    ports:
      - "8000:8000"
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

  account-service:
    build: ./account-service
    depends_on:
      - postgres-account
      - kafka
    environment:
      DB_HOST: postgres-account
      DB_NAME: accountdb
      DB_USER: accountuser
      DB_PASSWORD: accountpass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
    ports:
      - "9090:9090"

  transaction-service:
    build: ./transaction-service
    depends_on:
      - postgres-transaction
      - kafka
      - account-service
    environment:
      DB_HOST: postgres-transaction
      DB_NAME: transactiondb
      DB_USER: transactionuser
      DB_PASSWORD: transactionpass
      ACCOUNT_SERVICE_HOST: account-service
      ACCOUNT_SERVICE_PORT: 9090
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
    ports:
      - "9092:9092"

  notification-service:
    build: ./notification-service
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      MAIL_HOST: smtp.example.com
      MAIL_PORT: 587
      MAIL_USER: user@example.com
      MAIL_PASS: password
    ports:
      - "9093:9093"

  frontend:
    build: ./frontend
    depends_on:
      - auth_service
      - account-service
      - transaction-service
    environment:
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true

volumes:
  pgdata-account:
  pgdata-transaction:
  pgdata-auth:
